// querydsl 버전
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.playground'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.4.1'

	// https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-java8time
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time', version: '3.0.4.RELEASE'

	// querydsl 설정 - 동적쿼리
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor(

			"jakarta.persistence:jakarta.persistence-api",

			"jakarta.annotation:jakarta.annotation-api",

			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
	implementation group: 'com.querydsl', name: 'querydsl-core', version: '5.0.0'

	// test용 lombok 설정
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// https://mvnrepository.com/artifact/nz.net.ultraq.thymeleaf/thymeleaf-layout-dialect
	implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.3.0'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.3.2'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.2'

	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.3.1'

	// https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity6
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6', version: '3.1.1.RELEASE'

	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.0'

	// https://mvnrepository.com/artifact/org.jetbrains/annotations
	implementation group: 'org.jetbrains', name: 'annotations', version: '25.0.0'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.3.2'

	// port-one
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
	// google login
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}
compileJava.dependsOn('clean')